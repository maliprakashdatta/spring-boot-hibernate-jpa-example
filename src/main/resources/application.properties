spring.application.name=spring-boot-hibernate-jpa-example

You need to Inject jupiter artefact before start writing Tests

server.port = 8083
spring.datasource.driver-class-name = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/jpadatabase
spring.datasource.username = root
spring.datasource.password = Prakash@123

#spring.jpa.generate-ddl=true
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update

spring.datasource.url-options=useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Kolkata

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.dialect.format_sql = true

#
## let's listen on all ports to ensure we can be invoked from the pod IP
#server.address=0.0.0.0
#management.address=0.0.0.0
#
## let's use a different management port in case you need to listen to HTTP requests on 8080
#management.port=8081
#
## disable all management endpoints except health
#endpoints.enabled = true
#endpoints.health.enabled = true
#
## Rest Config
#server.servlet.context-path=/customer-management
#
## Application config
##server.port=8083
#app.name = customer-management
#welcome.message = Welcome to ${app.name}

